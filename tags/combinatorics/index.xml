<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Combinatorics on diefish&#39;s blog</title>
    <link>https://diefish1024.github.io/tags/combinatorics/</link>
    <description>Recent content in Combinatorics on diefish&#39;s blog</description>
    <image>
      <title>diefish&#39;s blog</title>
      <url>https://diefish1024.github.io/images/avatar.jpg</url>
      <link>https://diefish1024.github.io/images/avatar.jpg</link>
    </image>
    <generator>Hugo -- 0.152.2</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 23 Oct 2025 14:27:00 +0800</lastBuildDate>
    <atom:link href="https://diefish1024.github.io/tags/combinatorics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS0901 HW5</title>
      <link>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/cs0901-hw5/</link>
      <pubDate>Thu, 23 Oct 2025 14:27:00 +0800</pubDate>
      <guid>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/cs0901-hw5/</guid>
      <description>&lt;h2 id=&#34;problem-1&#34;&gt;Problem 1&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;(1)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;证明：
$$ 

\chi(G) + \chi(\overline{G}) \leq  v(G) + 1

 $$
&lt;strong&gt;证&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;归纳证明。对于大小为 $ 1 $ 的图，结论显然成立，此时 $ \chi(G)=\chi(\overline{G})=1 $。&lt;/p&gt;
&lt;p&gt;假设对于大小为 $ n-1 $ 的图这个结论都成立，那么对于一个大小为 $ n $ 的图 $ G $，我们考虑加入一个点 $ v $。此时我们有
$$ 

\chi(G-v)+\chi(\overline{G}-v) \leq  n

 $$
我们现在证明 $ \chi(G) $ 和 $ \chi(\overline{G}) $ 中至多只有一个可能会增加 $ 1 $。设 $ G $ 中 $ v $ 的度数为 $ d(v) $，在 $ \overline{G} $ 中为 $ \overline{d}(v)=n-1-d(v) $。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS0901 HW4</title>
      <link>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/cs0901-hw4/</link>
      <pubDate>Thu, 09 Oct 2025 21:26:00 +0800</pubDate>
      <guid>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/cs0901-hw4/</guid>
      <description>&lt;h2 id=&#34;problem-1&#34;&gt;Problem 1&lt;/h2&gt;
&lt;p&gt;证明存在常数 $ c &gt; 1 $ 和 $ N &gt; 0 $，使得当 $ n &gt; N $ 时， $ [n] $ 上树的同构类数量至少为 $ c^n $ 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;证&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们需要的同构类的数量则可以看成 $ n $ 个点无标号的树的数量。需要证明这个数量增长的足够快。&lt;/p&gt;
&lt;p&gt;首先根据 Cayley 公式，$ n $ 个点的有标号的树的数量为 $ n^{n-2} $。显然所有无标号的树的数量大于 $ \dfrac{n^{n-2}}{n!} $，因为这里直接假设所有点都是对称的，但是实际上一棵有标号的树并不会对应 $ n! $ 颗无标号的树。我们直接取 $ c=2 $，于是就只需要证明存在 $ N&gt;0 $ 满足在 $ n&gt;N $ 时有
$$ 

\dfrac{n^{n-2}}{n!} &gt; 2^{n}

 $$
我们使用斯特林公式，在 $ n $ 足够大时有
$$ 

n! \approx \sqrt{ 2\pi n }\left( \dfrac{n}{e} \right)^{n}

 $$
带入下界，得到
$$ 

\dfrac{n^{n-2}}{n!} \approx \dfrac{e^{n}}{\sqrt{ 2\pi}\cdot n^{5 / 2}}

 $$
所以只需要证明在 $ n&gt;N $ 时有
$$ 

(\sqrt{ 2\pi })^{1 / n} \cdot n^{5 / 2n} &lt; \dfrac{e}{2}

 $$
对于左式，显然有
$$ 

\lim_{ n \to \infty } [(\sqrt{ 2\pi })^{1 / n} \cdot n^{5 / 2n}] = 1 &lt; \dfrac{e}{2}

 $$
根据极限的定义，我们总能找到一个 $ N $ 满足条件。因此得证！&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS0901 HW3</title>
      <link>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/cs0901-hw3/</link>
      <pubDate>Sun, 05 Oct 2025 23:00:00 +0800</pubDate>
      <guid>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/cs0901-hw3/</guid>
      <description>&lt;h2 id=&#34;problem-1&#34;&gt;Problem 1&lt;/h2&gt;
&lt;p&gt;证明
$$ 

\begin{align*}
\sum_{i=0}^{n} (-1)^{i}\binom{ n }{ i } \binom{ n+m-i }{ k-i } = \binom{ m }{ k }  \\
\sum_{i=0}^{n} \binom{ k }{ i } D_{n-i} = \sum_{j=0}^{n-k} (-1)^{j}\binom{ n-k }{ j } (n-j)!
\end{align*}

 $$
&lt;strong&gt;证 1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于第一个式子，我们考虑组合意义。设有 $ A,B $ 两个集合，分别包含 $ n $ 和 $ m $ 个元素，总共 $ n+m $ 个元素。我们希望从集合 $ B $ 中恰好选择 $ k $ 个元素。我们可以通过容斥原理的补集形式求解，定义事件 $ A_{i} $ 为所选的 $ k $ 个元素中至少包含 $ i $ 个来自 $ A $ 的元素，那么我们需要求解的事件集合为 $ U\setminus\bigcup_{i\leq n}A_{i} $，并且
$$ 

\left| A_{i} \right| = \binom{ n }{ i } \binom{ n+m-i }{ k-i } 

 $$
因此根据容斥原理，就可以得到
$$ 

\left| U\setminus \bigcup_{i\leq n}A_{i} \right| = \sum_{i=0}^{n} (-1)^{i}\binom{ n }{ i } \binom{ n+m-i }{ k-i } = \binom{ m }{ k }  

 $$&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lect3-The Principle of Inclusion and Exclusion</title>
      <link>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/lect3-the-principle-of-inclusion-and-exclusion/</link>
      <pubDate>Sun, 28 Sep 2025 12:55:00 +0800</pubDate>
      <guid>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/lect3-the-principle-of-inclusion-and-exclusion/</guid>
      <description>&lt;h2 id=&#34;principle-of-inclusion-and-exclusion&#34;&gt;Principle of Inclusion and Exclusion&lt;/h2&gt;
&lt;p&gt;对于任意有限集合 $ A_1, A_2, \dots, A_n $，容斥原理如下：
$$ 
  
\left| \bigcup_{i=1}^{n} A_i \right| = \sum_{i=1}^{n} \left| A_i \right| - \sum_{1\leq i&lt; j\leq n} \left| A_i \cap A_j \right| + \dots + (-1)^{n} \left| \bigcap_{i=1}^{n} A_i \right|  

 $$&lt;br&gt;
可更紧凑地表示为
$$ 
  
\left| \bigcup_{i=1}^{n} A_i \right| = \sum_{k=1}^{n} (-1)^{k-1} \sum_{S \subseteq [n], |S|=k} \left| \bigcap_{i \in S} A_i \right|  

 $$
或
$$ 
  
\left| \bigcup_{i=1}^{n} A_i \right| = \sum_{\emptyset \neq S \subseteq [n]} (-1)^{|S|-1} \left| \bigcap_{i \in S} A_i \right|  

 $$&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS0901 HW2</title>
      <link>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/cs0901-hw2/</link>
      <pubDate>Wed, 24 Sep 2025 20:50:00 +0800</pubDate>
      <guid>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/cs0901-hw2/</guid>
      <description>&lt;h2 id=&#34;problem-1&#34;&gt;Problem 1&lt;/h2&gt;
&lt;p&gt;用生成函数求解递推式
$$ 

a_{n} = 4a_{n-1} - 5a_{n-2} + 2a_{n-3}

 $$
初始值为 $ a_{0}=0,a_{1}=3,a_{2}=7 $。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;设数列 $ \{ a_{n} \} $ 的生成函数为 $ F(x) $，那么根据递推式和初值 $ a_{0}=0,a_{1}=3,a_{2}=7 $ 得到
$$ 

F(x) = 4xF(x) - 5x^{2}F(x) + 2x^{3}F(x) + 3x - 5x^{2}

 $$
得到
$$ 

F(x) = \dfrac{5x^{2}-3x}{2x^{3}-5x^{2}+4x-1} = \dfrac{3x-5x^{2}}{(1-x)^{2}(1-2x)}

 $$
我们希望分解成
$$ 

\dfrac{A}{1-x} + \dfrac{B}{(1-x)^{2}} + \dfrac{C}{1-2x}

 $$
待定系数可以解得
$$ 

F(x) = \dfrac{-3}{1-x} + \dfrac{2}{(1-x)^{2}} + \dfrac{1}{1-2x}

 $$
展开得到
$$ 

F(x) = \sum_{n=0}^{\infty} (-3+2(n+1)+2^{n})x^{n}

 $$
因此
$$ 

a_{n} = -3+2(n+1)+2^{n} = 2^{n} + 2n - 1

 $$&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lect2-Generating Functions</title>
      <link>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/lect2-generating-functions/</link>
      <pubDate>Tue, 23 Sep 2025 13:02:00 +0800</pubDate>
      <guid>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/lect2-generating-functions/</guid>
      <description>&lt;p&gt;考虑上一节引入的二项式定理
$$ 

(1+x)^{n} = \sum_{k=0}^{n} \binom{ n }{ k } x^{k}

 $$
这可以理解成我们把二项系数转换成了一个函数，这使得我们能更有效地操作和分析序列，这个工具被成为&lt;strong&gt;生成函数&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;ordinary-generating-functions&#34;&gt;Ordinary Generating Functions&lt;/h2&gt;
&lt;p&gt;给定序列 $ \{ a_{n} \}_{n\geq 0} $，由 $ \{ a_{n} \} $ 定义的&lt;strong&gt;普通生成函数 (OGF)&lt;/strong&gt; 为：
$$ 

G(x) = \sum_{n\geq  0} a_{n}x^{n}

 $$
虽然看起来 OGF 并没有被很好的定义，对于和某些数列，这个形式不会收敛，但是实际上生成函数并不能被看成一个真正的函数，它是一个&lt;strong&gt;形式幂级数&lt;/strong&gt;，并且不被要求收敛。&lt;/p&gt;
&lt;p&gt;以下是一些生成函数的基础例子：
$$ 

G(x) = 1+x+x^{2}+x^{3} +\dots = \dfrac{1}{1-x}

 $$
$$ 

G(x) = 1+ax+a^{2}x^{2} + a^{3}x^{3} + \dots = \dfrac{1}{1-ax}

 $$&lt;/p&gt;
&lt;p&gt;给定一个序列，写出他的生成函数是很容易的。尽管找到他的闭合形式不容易，但是我们一般不需要这样做。相反，我们需要考虑给定一个闭合形式，需要如何知道其对应的序列。&lt;/p&gt;
&lt;p&gt;我们约定 $ [x^{n}]G(x) $ 表示生成函数中 $ x^{n} $ 的系数。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS0901 HW1</title>
      <link>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/cs0901-hw1/</link>
      <pubDate>Wed, 17 Sep 2025 09:45:00 +0800</pubDate>
      <guid>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/cs0901-hw1/</guid>
      <description>&lt;h2 id=&#34;problem-1&#34;&gt;Problem 1&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;(1)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;求
$$ 

\sum_{k=0}^{n} \binom{ 2n }{ 2k } 

 $$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$$ 

\begin{align*}
 &amp; \sum_{k=0}^{n} (-1)^{k}\binom{ n }{ k } = 0 \\
\implies &amp; \sum_{k=0}^{2n} (-1)^{k}\binom{ 2n }{ k } =0 \\
\implies &amp; \sum_{k=0}^{2n} \binom{ 2n }{ 2k } = \sum_{k=1}^{2n} \binom{ 2n }{ 2k - 1 } 
\end{align*}

 $$
同时由于
$$ 

\sum_{k=0}^{2n} \binom{ 2n }{ 2k } + \sum_{k=1}^{2n} \binom{ 2n }{ 2k - 1 } = \sum_{k=0}^{2n} \binom{ 2n }{ k } = 2^{2n}

 $$
得到
$$ 

\sum_{k=0}^{2n} \binom{ 2n }{ 2k } = 2^{2n-1}

 $$&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lect1-Counting</title>
      <link>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/lect1-counting/</link>
      <pubDate>Tue, 16 Sep 2025 13:22:00 +0800</pubDate>
      <guid>https://diefish1024.github.io/posts/class-notes/cs0901-combinatorics/lect1-counting/</guid>
      <description>&lt;h2 id=&#34;product-and-sum-principles&#34;&gt;Product and Sum Principles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;加法原理（分类计数）&lt;/strong&gt;
若一个任务可分解为若干个互斥的子类，第 $ i $ 类有 $ a_i $ 种方案，则总数为 $ \sum_i a_i $。
解释：互斥保证不重不漏，求和即“或”的计数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;乘法原理（分步计数）&lt;/strong&gt;
若一个任务分为若干个有序步骤，步骤 $ i $ 有 $ b_i $ 种选择且相互独立，则总数为 $ \prod_i b_i $。
解释：有序步骤逐个做决定，“且”的计数对应乘法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;constructing-maps&#34;&gt;Constructing Maps&lt;/h2&gt;
&lt;p&gt;有些组合证明可以依赖于构造映射：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;单射&lt;/strong&gt;：不同原像映到不同像，用于证明下界或“可嵌入性”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;满射&lt;/strong&gt;：像覆盖全体，用于证明上界可达或构造覆盖。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;双射&lt;/strong&gt;：建立集合 $ A $ 与 $ B $ 的一一对应，从而数 $ |A|=|B| $；这是“数某一个量 ⇒ 构造双射”的核心思想。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;twelvefoldway&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Twelvefold_way&#34;&gt;Twelvefoldway&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;将 $ n $ 个球放入 $ m $ 个盒子，球与盒子可“可区分/不可区分”，以及盒子容量约束“任意/至多 1/至少 1”。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;$ n $&lt;/th&gt;
          &lt;th&gt;$ m $&lt;/th&gt;
          &lt;th&gt;任意&lt;/th&gt;
          &lt;th&gt;$ \leq 1 $&lt;/th&gt;
          &lt;th&gt;$ \geq 1 $&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;不同&lt;/td&gt;
          &lt;td&gt;不同&lt;/td&gt;
          &lt;td&gt;$ m^{n} $&lt;/td&gt;
          &lt;td&gt;$ m^{\underline{n}} $&lt;/td&gt;
          &lt;td&gt;$ m!\left\{ {n \atop m} \right\} $&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;同&lt;/td&gt;
          &lt;td&gt;不同&lt;/td&gt;
          &lt;td&gt;$ \binom{ n+m-1 }{ m-1 } $&lt;/td&gt;
          &lt;td&gt;$ \binom{ m }{ n } $&lt;/td&gt;
          &lt;td&gt;$ \binom{ n-1 }{ m-1 } $&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;不同&lt;/td&gt;
          &lt;td&gt;同&lt;/td&gt;
          &lt;td&gt;$ \sum_{k=0}^{\min(n,m)} \left\{ {n \atop k} \right\} $&lt;/td&gt;
          &lt;td&gt;$ [n \leq m] $&lt;/td&gt;
          &lt;td&gt;$ \left\{ {n \atop m} \right\} $&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;同&lt;/td&gt;
          &lt;td&gt;同&lt;/td&gt;
          &lt;td&gt;$ p_{\leq m}(n) $&lt;/td&gt;
          &lt;td&gt;$ [n \leq m] $&lt;/td&gt;
          &lt;td&gt;$ p(n,m) $&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;“把 $ n $ 个不同球分成 $ k $ 个非空无序盒”对应第二类斯特林数 $ \left\{ {n \atop k} \right\} $。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
